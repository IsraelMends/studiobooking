# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

# --- Expo autolinking (opcional, sÃ³ se o pacote existir) ---
expo_autolinking_path = File.expand_path("../node_modules/expo-modules-autolinking/scripts/autolinking", __dir__)
expo_available = false
begin
  if File.exist?(expo_autolinking_path) || File.exist?(expo_autolinking_path + ".rb")
    require_relative '../node_modules/expo-modules-autolinking/scripts/autolinking'
    expo_available = true
  else
    Pod::UI.warn "expo-modules-autolinking not found; skipping Expo autolinking"
  end
rescue LoadError => e
  Pod::UI.warn "Failed to require Expo autolinking: #{e.message}"
end

linkage = ENV['USE_FRAMEWORKS']
if linkage
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'studiobooking' do
  config = use_native_modules!

  # SÃ³ chama Expo se disponÃ­vel
  use_expo_modules! if expo_available

  use_react_native!(
    :path => config[:reactNativePath],
    # :hermes_enabled => true,
    # :fabric_enabled => true,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
  end
end
